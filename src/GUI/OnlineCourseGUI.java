/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BUS.DepartmentBLL;
import BUS.OnlineCourseBLL;
import ENTITY.Course;
import ENTITY.Department;
import ENTITY.OnlineCourse;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class OnlineCourseGUI extends javax.swing.JPanel {

    /**
     * Creates new form KhoaHocGUI
     */
    private int id;
    private ArrayList<OnlineCourse> listOnlineCourse;

    public OnlineCourseGUI() throws Exception {
        initComponents();
        loadListOnlineCourse();
        loadListCbxDepartment();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCredits = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtUrl = new javax.swing.JTextField();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnAddOnlineCourse = new javax.swing.JButton();
        btnDeleteOnlineCourse = new javax.swing.JButton();
        btnEditOnlineCourse = new javax.swing.JButton();
        btnResetOnlineCourse = new javax.swing.JButton();
        cbxDepartment = new javax.swing.JComboBox<>();
        txtCourseTitle = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableOnlineCourse = new javax.swing.JTable();

        setBackground(new java.awt.Color(236, 239, 193));
        setPreferredSize(new java.awt.Dimension(600, 636));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/onlineCourse (1).png"))); // NOI18N
        jLabel1.setText("ONLINE COURSE");

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Course Title");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Credits");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Department Name");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Url");

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/search (1).png"))); // NOI18N
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnAddOnlineCourse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/add (1).png"))); // NOI18N
        btnAddOnlineCourse.setText("Add");
        btnAddOnlineCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddOnlineCourseActionPerformed(evt);
            }
        });

        btnDeleteOnlineCourse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/delete (1).png"))); // NOI18N
        btnDeleteOnlineCourse.setText("Delete");
        btnDeleteOnlineCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteOnlineCourseActionPerformed(evt);
            }
        });

        btnEditOnlineCourse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/edit (1).png"))); // NOI18N
        btnEditOnlineCourse.setText("Edit");
        btnEditOnlineCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditOnlineCourseActionPerformed(evt);
            }
        });

        btnResetOnlineCourse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/reset (1).png"))); // NOI18N
        btnResetOnlineCourse.setText("Reset");
        btnResetOnlineCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetOnlineCourseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCredits)
                    .addComponent(txtUrl, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(cbxDepartment, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCourseTitle))
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddOnlineCourse)
                            .addComponent(btnDeleteOnlineCourse))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnResetOnlineCourse)
                            .addComponent(btnEditOnlineCourse))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(txtCourseTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCredits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddOnlineCourse)
                    .addComponent(btnEditOnlineCourse))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(btnDeleteOnlineCourse)
                    .addComponent(btnResetOnlineCourse)
                    .addComponent(cbxDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tableOnlineCourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableOnlineCourse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableOnlineCourseMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableOnlineCourse);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 818, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(300, 300, 300)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Click 1 dong trong table
    private void tableOnlineCourseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableOnlineCourseMouseClicked
        int row = tableOnlineCourse.getSelectedRow();
        id = Integer.parseInt(tableOnlineCourse.getValueAt(row, 1).toString());
        String courseTitle = tableOnlineCourse.getValueAt(row, 2).toString();
        String credits = tableOnlineCourse.getValueAt(row, 3).toString();
        String nameDepart = tableOnlineCourse.getValueAt(row, 4).toString();
        String url = tableOnlineCourse.getValueAt(row, 5).toString();

        txtCourseTitle.setText(courseTitle);
        txtCredits.setText(credits);
        txtUrl.setText(url);

        int i = 0;
        Department depart;
        while (true) {
            depart = (Department) cbxDepartment.getItemAt(i);
            if (depart.getName().equalsIgnoreCase(nameDepart)) {
                cbxDepartment.setSelectedIndex(i);
                break;
            }
            i++;
        }
    }//GEN-LAST:event_tableOnlineCourseMouseClicked

    // Add
    private void btnAddOnlineCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddOnlineCourseActionPerformed
        if (txtCourseTitle.getText().toString().isEmpty() || txtCredits.getText().isEmpty() || txtUrl.getText().toString().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin khóa học", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        } else {
            Department depart = (Department) cbxDepartment.getSelectedItem();
            int departmentID = depart.getDepartmentID();

            OnlineCourse onlineCourse = new OnlineCourse();
            onlineCourse.setTitle(txtCourseTitle.getText().toString());
            onlineCourse.setCredits(Integer.parseInt(txtCredits.getText()));
            onlineCourse.setUrl(txtUrl.getText().toString());
            onlineCourse.setDepartmentID(departmentID);
            try {
                if (OnlineCourseBLL.addOnlineCourse(onlineCourse)) {
                    JOptionPane.showMessageDialog(this, "Thêm khóa học online thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    txtCourseTitle.setText("");
                    txtCredits.setText("");
                    txtUrl.setText("");
                    loadListOnlineCourse();
                }
            } catch (Exception ex) {
                Logger.getLogger(OnlineCourseGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnAddOnlineCourseActionPerformed

    // Reset
    private void btnResetOnlineCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetOnlineCourseActionPerformed
        txtCourseTitle.setText("");
        txtCredits.setText("");
        txtUrl.setText("");
    }//GEN-LAST:event_btnResetOnlineCourseActionPerformed

    // Delete
    private void btnDeleteOnlineCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteOnlineCourseActionPerformed
        if (txtCourseTitle.getText().toString().isEmpty() || txtCredits.getText().isEmpty() || txtUrl.getText().toString().isEmpty()) {
        } else {
            int x = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa hay không?");
            if (x == JOptionPane.YES_OPTION) {
                try {
                    if (OnlineCourseBLL.deleteOnlineCourseByID(id)) {
                        JOptionPane.showMessageDialog(this, "Xóa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                        txtCourseTitle.setText("");
                        txtCredits.setText("");
                        txtUrl.setText("");
                        try {
                            loadListOnlineCourse();
                        } catch (Exception ex) {
                            Logger.getLogger(OnlineCourseGUI.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                } catch (Exception ex) {
                    Logger.getLogger(OnlineCourseGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnDeleteOnlineCourseActionPerformed

    // Edit
    private void btnEditOnlineCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditOnlineCourseActionPerformed
        if (txtCourseTitle.getText().toString().isEmpty() || txtCredits.getText().isEmpty() || txtUrl.getText().toString().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin khóa học", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        } else {
            Department depart = (Department) cbxDepartment.getSelectedItem();
            int departmentID = depart.getDepartmentID();

            OnlineCourse onlineCourse = new OnlineCourse();
            onlineCourse.setTitle(txtCourseTitle.getText().toString());
            onlineCourse.setCredits(Integer.parseInt(txtCredits.getText()));
            onlineCourse.setUrl(txtUrl.getText().toString());
            onlineCourse.setDepartmentID(departmentID);
            try {
                if (OnlineCourseBLL.updateOnlineCourseByID(id, onlineCourse)) {
                    JOptionPane.showMessageDialog(this, "Cập nhật thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    try {
                        loadListOnlineCourse();
                    } catch (Exception ex) {
                        Logger.getLogger(OnlineCourseGUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(OnlineCourseGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnEditOnlineCourseActionPerformed

    // Search
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String keyWordSearch = txtSearch.getText().toString();
        try {
            ArrayList<OnlineCourse> listOnlineCourseSearch = OnlineCourseBLL.searchByNameCourse(keyWordSearch);
            loadListOnlineCourseSearch(listOnlineCourseSearch);
        } catch (Exception ex) {
            Logger.getLogger(OnlineCourseGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    // Load list Online Course search
    private void loadListOnlineCourseSearch(ArrayList<OnlineCourse> listOnlineCourse) throws Exception {
        DefaultTableModel model = (DefaultTableModel) tableOnlineCourse.getModel();
        // Xoá dữ liệu đang có trong table
        model.setRowCount(0);
        Vector<Object> header = new Vector<>();
        header.add("STT");
        header.add("CourseID");
        header.add("Course Title");
        header.add("Credits");
        header.add("Department Name");
        header.add("Url");
        if (model.getRowCount() == 0) {
            model = new DefaultTableModel(header, 0);
        }
        int i = 0;
        for (OnlineCourse onlineCourse : listOnlineCourse) {
            Vector<Object> vec = new Vector<>();
            vec.add(i);
            vec.add(onlineCourse.getCourseID());
            vec.add(onlineCourse.getTitle());
            vec.add(onlineCourse.getCredits());
            vec.add(getNameDepartByID(onlineCourse.getDepartmentID()));
            vec.add(onlineCourse.getUrl());
            i++;
            model.addRow(vec);
        }
        tableOnlineCourse.setModel(model);
    }

    // Load table Online Course
    private void loadListOnlineCourse() throws Exception {
        listOnlineCourse = OnlineCourseBLL.getAllOnlineCourse();
        DefaultTableModel model = (DefaultTableModel) tableOnlineCourse.getModel();
        // Xoá dữ liệu đang có trong table
        model.setRowCount(0);
        Vector<Object> header = new Vector<>();
        header.add("STT");
        header.add("CourseID");
        header.add("Course Title");
        header.add("Credits");
        header.add("Department Name");
        header.add("Url");
        if (model.getRowCount() == 0) {
            model = new DefaultTableModel(header, 0);
        }
        int i = 0;
        for (OnlineCourse onlineCourse : listOnlineCourse) {
            Vector<Object> vec = new Vector<>();
            vec.add(i);
            vec.add(onlineCourse.getCourseID());
            vec.add(onlineCourse.getTitle());
            vec.add(onlineCourse.getCredits());
            vec.add(getNameDepartByID(onlineCourse.getDepartmentID()));
            vec.add(onlineCourse.getUrl());
            i++;
            model.addRow(vec);
        }
        tableOnlineCourse.setModel(model);
    }

    private String getNameDepartByID(int id) throws Exception {
        return DepartmentBLL.getNameDepartByID(id);
    }

    // load list departmentName to cbx
    private void loadListCbxDepartment() throws Exception {
        ArrayList<Department> listDepartment = DepartmentBLL.getAllDepartment();
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbxDepartment.getModel();

        for (Department depart : listDepartment) {
            model.addElement(depart);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddOnlineCourse;
    private javax.swing.JButton btnDeleteOnlineCourse;
    private javax.swing.JButton btnEditOnlineCourse;
    private javax.swing.JButton btnResetOnlineCourse;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<Department> cbxDepartment;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableOnlineCourse;
    private javax.swing.JTextField txtCourseTitle;
    private javax.swing.JTextField txtCredits;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtUrl;
    // End of variables declaration//GEN-END:variables
}
