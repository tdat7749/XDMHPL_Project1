/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BUS.CourseBLL;
import BUS.StudentBLL;
import BUS.StudentGradeBLL;
import ENTITY.Course;
import ENTITY.Student;
import ENTITY.StudentGrade;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class StudentGradeGUI extends javax.swing.JPanel {

    /**
     * Creates new form DangKyKhoaGUI
     */
    private ArrayList<StudentGrade> listStudentGrade;
    private int id;

    public StudentGradeGUI() throws Exception {
        initComponents();
        loadListStudentGrade();
        loadListCbxStudent();
        loadListCbxCourse();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbxCourse = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtGrade = new javax.swing.JTextField();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        cbxStudent = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableStudentGrade = new javax.swing.JTable();

        setBackground(new java.awt.Color(236, 239, 193));
        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/stdent_grade (1).jpg"))); // NOI18N
        jLabel1.setText("STUDENT GRADE");

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Student Name");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Course Name");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Grade");

        btnSearch.setIcon(new javax.swing.ImageIcon("C:\\Users\\Khoa\\Documents\\NetBeansProjects\\XDMHPL_Project1-main\\Image\\search (1).png")); // NOI18N
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnAdd.setIcon(new javax.swing.ImageIcon("C:\\Users\\Khoa\\Documents\\NetBeansProjects\\XDMHPL_Project1-main\\Image\\add (1).png")); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon("C:\\Users\\Khoa\\Documents\\NetBeansProjects\\XDMHPL_Project1-main\\Image\\delete (1).png")); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEdit.setIcon(new javax.swing.ImageIcon("C:\\Users\\Khoa\\Documents\\NetBeansProjects\\XDMHPL_Project1-main\\Image\\edit (1).png")); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnReset.setIcon(new javax.swing.ImageIcon("C:\\Users\\Khoa\\Documents\\NetBeansProjects\\XDMHPL_Project1-main\\Image\\reset (1).png")); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbxCourse, 0, 207, Short.MAX_VALUE)
                    .addComponent(txtGrade)
                    .addComponent(cbxStudent, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAdd)
                            .addComponent(btnDelete))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnReset)
                            .addComponent(btnEdit))))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(cbxStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbxCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAdd)
                        .addComponent(btnEdit)))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete)
                    .addComponent(btnReset))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tableStudentGrade.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableStudentGrade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableStudentGradeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableStudentGrade);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(294, 294, 294)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Click 1 dong trong table
    private void tableStudentGradeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableStudentGradeMouseClicked
        int row = tableStudentGrade.getSelectedRow();
        id = Integer.parseInt(tableStudentGrade.getValueAt(row, 1).toString());
        String nameStudent = tableStudentGrade.getValueAt(row, 2).toString();
        String courseTitle = tableStudentGrade.getValueAt(row, 3).toString();
        String grade = tableStudentGrade.getValueAt(row, 4).toString();

        txtGrade.setText(grade);

        int i = 0;
        Course course;
        while (true) {
            course = (Course) cbxCourse.getItemAt(i);
            if (course.getTitle().equalsIgnoreCase(courseTitle)) {
                cbxCourse.setSelectedIndex(i);
                break;
            }
            i++;
        }

        i = 0;
        Student student;
        while (true) {
            student = (Student) cbxStudent.getItemAt(i);
            if ((student.getFirstName() + " " + student.getLastName()).equalsIgnoreCase(nameStudent)) {
                cbxStudent.setSelectedIndex(i);
                break;
            }
            i++;
        }
    }//GEN-LAST:event_tableStudentGradeMouseClicked

    // Add
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        Student student = (Student) cbxStudent.getSelectedItem();
        int studentID = student.getPersonID();
        Course course = (Course) cbxCourse.getSelectedItem();
        int courseID = course.getCourseID();
        double grade = Double.parseDouble(txtGrade.getText().toString());

        StudentGrade studentGrade = new StudentGrade();
        studentGrade.setCourseID(courseID);
        studentGrade.setStudentID(studentID);
        studentGrade.setGrade(grade);

        
        try {
            if (StudentGradeBLL.addStudentGrade(studentGrade)) {
                JOptionPane.showMessageDialog(this, "Thêm thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                txtGrade.setText("");
                loadListStudentGrade();
            }
        } catch (Exception ex) {
            Logger.getLogger(StudentGradeGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    // Reset
    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtGrade.setText("");
    }//GEN-LAST:event_btnResetActionPerformed

    // Delete
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int x = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa hay không?");
        if (x == JOptionPane.YES_OPTION) {
            try {
                if (StudentGradeBLL.deleteStudentGradeByID(id)) {
                    JOptionPane.showMessageDialog(this, "Xóa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    txtGrade.setText("");
                    loadListStudentGrade();
                }
            } catch (Exception ex) {
                Logger.getLogger(StudentGradeGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    // Edit
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        Student student = (Student) cbxStudent.getSelectedItem();
        int studentID = student.getPersonID();
        Course course = (Course) cbxCourse.getSelectedItem();
        int courseID = course.getCourseID();
        double grade = Double.parseDouble(txtGrade.getText().toString());

        StudentGrade studentGrade = new StudentGrade();
        studentGrade.setCourseID(courseID);
        studentGrade.setStudentID(studentID);
        studentGrade.setGrade(grade);
        
        
        try {
            if (StudentGradeBLL.updateStudentGradeByID(id, studentGrade)) {
                JOptionPane.showMessageDialog(this, "Cập nhật thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                loadListStudentGrade();
            }
        } catch (Exception ex) {
            Logger.getLogger(StudentGradeGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    // Search
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String keyWordSearch = txtSearch.getText().toString();
        try {
            ArrayList<StudentGrade> listStudentGradeSearch = StudentGradeBLL.searchStudentGradeByNameStudent(keyWordSearch);
            loadListStudentGrade(listStudentGradeSearch);
        } catch (Exception ex) {
            Logger.getLogger(StudentGradeGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    // load list StudentGrade Search to table
    private void loadListStudentGrade(ArrayList<StudentGrade> listStudentGradeSearch) throws Exception {
        DefaultTableModel model = (DefaultTableModel) tableStudentGrade.getModel();

        // Xoá dữ liệu đang có trong table
        model.setRowCount(0);

        Vector<Object> header = new Vector<>();
        header.add("STT");
        header.add("ID");
        header.add("Student Name");
        header.add("Course Title");
        header.add("Grade");

        if (model.getRowCount() == 0) {
            model = new DefaultTableModel(header, 0);
        }

        int i = 0;
        for (StudentGrade studentGrade : listStudentGradeSearch) {
            Vector<Object> vec = new Vector<>();
            vec.add(i);
            vec.add(studentGrade.getEnrollmentID());
            vec.add(getNameStudentByID(studentGrade.getStudentID()));
            vec.add(getNameCourseByID(studentGrade.getCourseID()));
            vec.add(studentGrade.getGrade());

            i++;
            model.addRow(vec);
        }
        tableStudentGrade.setModel(model);
    }

    // load list StudentGrade to table
    private void loadListStudentGrade() throws Exception {
        listStudentGrade = StudentGradeBLL.getAllStudentGrade();
        DefaultTableModel model = (DefaultTableModel) tableStudentGrade.getModel();

        // Xoá dữ liệu đang có trong table
        model.setRowCount(0);

        Vector<Object> header = new Vector<>();
        header.add("STT");
        header.add("ID");
        header.add("Student Name");
        header.add("Course Title");
        header.add("Grade");

        if (model.getRowCount() == 0) {
            model = new DefaultTableModel(header, 0);
        }

        int i = 0;
        for (StudentGrade studentGrade : listStudentGrade) {
            Vector<Object> vec = new Vector<>();
            vec.add(i);
            vec.add(studentGrade.getEnrollmentID());
            vec.add(getNameStudentByID(studentGrade.getStudentID()));
            vec.add(getNameCourseByID(studentGrade.getCourseID()));
            vec.add(studentGrade.getGrade());

            i++;
            model.addRow(vec);
        }
        tableStudentGrade.setModel(model);
    }

    // load list cbxStudent
    private void loadListCbxStudent() throws Exception {
        ArrayList<Student> listStudent = StudentBLL.getAllStudent();
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbxStudent.getModel();
        for (Student student : listStudent) {
            model.addElement(student);
        }
    }

    // load list cbxCourse
    private void loadListCbxCourse() throws Exception {
        ArrayList<Course> listCourse = CourseBLL.getAllCourse();
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbxCourse.getModel();
        for (Course course : listCourse) {
            model.addElement(course);
        }
    }

    // getNameCourseByID
    private String getNameCourseByID(int id) throws Exception {
        return CourseBLL.getNameCourseByID(id);
    }

    // getNameStudentByID
    private String getNameStudentByID(int id) throws Exception {
        return StudentBLL.getNameStudentByID(id);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<Course> cbxCourse;
    private javax.swing.JComboBox<Student> cbxStudent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableStudentGrade;
    private javax.swing.JTextField txtGrade;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
